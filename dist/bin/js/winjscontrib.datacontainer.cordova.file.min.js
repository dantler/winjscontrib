/* 
 * WinJS Contrib v2.1.0.7
 * licensed under MIT license (see http://opensource.org/licenses/MIT)
 * sources available at https://github.com/gleborgne/winjscontrib
 */

!function(){"use strict";function e(e){return encodeURIComponent(e)+".json"}var n=WinJSContrib.Logs.getLogger("WinJSContrib.DataContainer.Cordova");WinJS.Namespace.define("WinJSContrib.DataContainer",{CordovaContainer:WinJS.Class.define(function(e,r,t){this.key=e||"mcndatacontainer",this.options=r,this.parent=t,this.storageKey=t?t.storageKey+"."+this.key:this.key;var i=this;this.folder,i.folderPromise=new WinJS.Promise(function(e,o){if(i.parent)n.verbose("trying to get the directory "+i.key+" from parent "+t.key),t.folderPromise.then(function(r){n.verbose("get the directory "+i.key+" from parent "+t.key),r.getDirectory(i.key,{create:!0},function(r){n.debug("got the directory"),i.folder=r,e(i.folder)},function(e){n.warn("I failed at getting a directory"),o(e)})},function(e){n.warn("I failed at getting a directory "+i.key+"from parent "+t.key),o(e)});else{if(!window.requestFileSystem)throw"File plugin is required !";window.requestFileSystem(LocalFileSystem.PERSISTENT,0,function(t){var a=t.root;n.verbose("getting directory "+i.key);var f=i.key;r&&r.packageId&&window&&window.cordova&&"ios"!=window.cordova.platformId&&(f="Android/data/"+r.packageId+"/files/"+f),window&&window.cordova&&"ios"==window.cordova.platformId?f=i.key:n.error("WARNING !!!! you have to provide the packageId"),a.getDirectory(f,{create:!0},function(r){n.debug("got the directory "+i.key),i.folder=r,e(i.folder)},function(e){n.verbose("(0) I failed at getting a directory "+i.key),o(e)})},function(e){n.warn("(1) I failed at getting a directory "+i.key),o(e)})}})},{read:function(r){var t=this;return n.verbose("trying to read "+r),new WinJS.Promise(function(i,o){n.verbose("get container folder promise for "+r),t.folderPromise.then(function(t){n.verbose("got container folder promise for "+r),n.verbose("trying to read file "+r),t.getFile(e(r),{create:!0,exclusive:!1},function(e){n.debug("read file "+r),e.file(function(e){var r=new FileReader;r.onloadend=function(e){try{i(e.target&&e.target.result?JSON.parse(e.target.result):"")}catch(r){n.warn("error read file"),o()}},r.readAsText(e),r.onerror=function(e){n.warn("error read file"),o()}})},function(e){n.warn("error read file",e),o()})},function(e){n.warn("error folder promise",e),o()})})},save:function(n,r){var t=this;return new WinJS.Promise(function(i,o){if(r){var a=JSON.stringify(r);t.folderPromise.then(function(r){r.getFile(e(n),{create:!0,exclusive:!1},function(e){e.createWriter(function(e){e.write(a),e.onwriteend=i},function(e){o(e)})},function(e){o(e)})})}})},remove:function(r){var t=this;return new WinJS.Promise(function(i,o){t.folderPromise.then(function(t){t.getFile(e(r),{create:!0,exclusive:!1},function(e){e.remove(function(){n.debug("file removed :"+r),i()},function(){n.warn("faild to remove "+r)})},function(){o()})})})},list:function(){var e=this;return new WinJS.Promise(function(n,r){e.folderPromise.then(function(e){var r=e.createReader();r.readEntries(function(e){for(var r=[],t=0;t<e.length;t++)r.push({displayName:e[t].name.substring(0,e[t].name.length-5)});n(r)},function(){n([])})})})},listKeys:function(){var e=this;return new WinJS.Promise(function(n,r){e.folderPromise.then(function(e){var r=e.createReader();r.readEntries(function(e){for(var r=[],t=0;t<e.length;t++)r.push(e[t].name.substring(0,e[t].name.length-5));n(r)},function(){n([])})})})},child:function(e){if(e){if("number"==typeof e&&(e=e.toString()),this[e])return this[e];n.verbose("getting child");var r=new WinJSContrib.DataContainer.CordovaContainer(e,this.options,this);return this[e]=r,r}}})}),WinJSContrib.DataContainer.current=WinJSContrib.DataContainer.current||null,WinJSContrib.DataContainer.CordovaContainer.makeCurrent=function(e,n){WinJSContrib.DataContainer.current=new WinJSContrib.DataContainer.CordovaContainer(e,n)}}();