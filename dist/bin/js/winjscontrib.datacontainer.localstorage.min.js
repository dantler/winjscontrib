/* 
 * WinJS Contrib v2.1.0.7
 * licensed under MIT license (see http://opensource.org/licenses/MIT)
 * sources available at https://github.com/gleborgne/winjscontrib
 */

var __global=this,WinJSContrib;!function(t){var e;!function(e){e.current=t.DataContainer.current||null;var r=function(){function e(t,e,r){this.key=t||"mcndatacontainer",this.options=e,this.parent=r,this.storageKey=r?r.storageKey+"#"+this.key:this.key}return e.makeCurrent=function(r,o){t.DataContainer.current=new e(r,o)},e.prototype.read=function(t){var e=this,r=e.storageKey+"###"+t,o=localStorage[r];return o&&(o=JSON.parse(o)),WinJS.Promise.wrap(o)},e.prototype.save=function(t,e){var r=this;if(e){var o=JSON.stringify(e),i=r.storageKey+"###"+t;r.options.logger&&r.options.logger.debug("saving "+i),localStorage[i]=o}return WinJS.Promise.wrap()},e.prototype.remove=function(t){var e=this,r=e.storageKey+"###"+t;return localStorage.removeItem(r),e.options.logger&&e.options.logger.debug("removing "+r),WinJS.Promise.wrap()},e.prototype.listKeys=function(){for(var t=Object.keys(localStorage),e=[],r=0;r<t.length;r++)-1!=t[r].indexOf(this.storageKey)&&e.push(t[r].replace(this.storageKey+"#",""));return WinJS.Promise.wrap(e)},e.prototype.list=function(){for(var t=Object.keys(localStorage),e=[],r=0;r<t.length;r++)-1!=t[r].indexOf(this.storageKey)&&e.push({displayName:t[r].replace(this.storageKey+"#","")});return WinJS.Promise.wrap(e)},e.prototype.child=function(t){if(this.childs[t])return this.childs[t];var r=new e(t,this.options,this);return this.childs[t]=r,r},e.prototype.childWithTransaction=function(t,e){var r=WinJS.Promise.wrapError({message:"Not yet implemented for this container"});return r},e.prototype.deleteContainer=function(){return localStorage.removeItem(this.storageKey),this.parent&&this.parent.childs[this.key]&&(this.parent.childs[this.key]=null),WinJS.Promise.wrap()},e}();e.LocalStorageContainer=r}(e=t.DataContainer||(t.DataContainer={}))}(WinJSContrib||(WinJSContrib={}));